
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "moddatetime" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."gender" AS ENUM (
    'Mulher',
    'Homem'
);

ALTER TYPE "public"."gender" OWNER TO "postgres";

CREATE TYPE "public"."main_category" AS ENUM (
    '1',
    '2',
    '3',
    '4',
    '5'
);

ALTER TYPE "public"."main_category" OWNER TO "postgres";

CREATE TYPE "public"."size_type" AS ENUM (
    'Roupa',
    'Calças',
    'Calçado'
);

ALTER TYPE "public"."size_type" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."brands" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "logo_url" "text" DEFAULT ''::"text" NOT NULL,
    "logo_url_without_background" "text" DEFAULT ''::"text",
    "cover_url" "text" DEFAULT ''::"text"
);

ALTER TABLE "public"."brands" OWNER TO "postgres";

ALTER TABLE "public"."brands" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Brands_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."categories" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "main_category" "public"."main_category" DEFAULT '1'::"public"."main_category" NOT NULL
);

ALTER TABLE "public"."categories" OWNER TO "postgres";

ALTER TABLE "public"."categories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Categories_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."colors" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL
);

ALTER TABLE "public"."colors" OWNER TO "postgres";

ALTER TABLE "public"."colors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Colors_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."conditions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."conditions" OWNER TO "postgres";

ALTER TABLE "public"."conditions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Conditions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."materials" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL
);

ALTER TABLE "public"."materials" OWNER TO "postgres";

ALTER TABLE "public"."materials" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Materials_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."offers" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "price" numeric NOT NULL,
    "qty" smallint DEFAULT '1'::smallint NOT NULL,
    "id_product" bigint NOT NULL,
    "id_color" bigint DEFAULT '1'::bigint NOT NULL,
    "id_size" bigint DEFAULT '1'::bigint NOT NULL,
    "id_condition" bigint DEFAULT '1'::bigint NOT NULL
);

ALTER TABLE "public"."offers" OWNER TO "postgres";

ALTER TABLE "public"."offers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Offers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."products_has_images" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "url" "text",
    "alt" "text",
    "id_product" bigint NOT NULL
);

ALTER TABLE "public"."products_has_images" OWNER TO "postgres";

ALTER TABLE "public"."products_has_images" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Products_Images_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."products_has_styles" (
    "id_product" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_style" bigint NOT NULL
);

ALTER TABLE "public"."products_has_styles" OWNER TO "postgres";

ALTER TABLE "public"."products_has_styles" ALTER COLUMN "id_product" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Products_has_Styles_id_product_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."products" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "reference" "text" NOT NULL,
    "id_brand" bigint NOT NULL,
    "id_category" bigint NOT NULL,
    "is_sustainable" boolean DEFAULT false NOT NULL,
    "views" double precision DEFAULT '0'::double precision NOT NULL,
    "name" "text",
    "is_public" boolean DEFAULT false NOT NULL,
    "discount" smallint DEFAULT '0'::smallint NOT NULL,
    "gender" smallint DEFAULT '0'::smallint
);

ALTER TABLE "public"."products" OWNER TO "postgres";

ALTER TABLE "public"."products" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Products_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."sizes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "type" "public"."size_type" DEFAULT 'Roupa'::"public"."size_type" NOT NULL,
    "size" "text" NOT NULL
);

ALTER TABLE "public"."sizes" OWNER TO "postgres";

ALTER TABLE "public"."sizes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Sizes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."styles" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL
);

ALTER TABLE "public"."styles" OWNER TO "postgres";

ALTER TABLE "public"."styles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Styles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."cart" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_offer" bigint NOT NULL,
    "qty" numeric DEFAULT '1'::numeric,
    "email" "text" NOT NULL,
    "id" bigint NOT NULL
);

ALTER TABLE "public"."cart" OWNER TO "postgres";

ALTER TABLE "public"."cart" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."cart_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."collections" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "privacy" bigint DEFAULT '1'::bigint NOT NULL,
    "share_id" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."collections" OWNER TO "postgres";

COMMENT ON TABLE "public"."collections" IS 'Coleções de Looks';

CREATE TABLE IF NOT EXISTS "public"."collections_has_looks" (
    "id_collection" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_look" bigint NOT NULL,
    "id_user" bigint
);

ALTER TABLE "public"."collections_has_looks" OWNER TO "postgres";

COMMENT ON TABLE "public"."collections_has_looks" IS 'Looks associados a uma coleção';

CREATE TABLE IF NOT EXISTS "public"."collections_has_users" (
    "id_collection" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_user" bigint NOT NULL,
    "is_admin" boolean DEFAULT true NOT NULL
);

ALTER TABLE "public"."collections_has_users" OWNER TO "postgres";

ALTER TABLE "public"."collections" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."collections_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."coupons" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text" NOT NULL,
    "description" "text" NOT NULL,
    "discount" smallint NOT NULL,
    "cost" smallint NOT NULL,
    "is_special" boolean NOT NULL
);

ALTER TABLE "public"."coupons" OWNER TO "postgres";

COMMENT ON TABLE "public"."coupons" IS 'Cupões existentes na plataforma';

CREATE TABLE IF NOT EXISTS "public"."coupons_has_brands" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_brand" bigint NOT NULL,
    "id_coupon" bigint NOT NULL
);

ALTER TABLE "public"."coupons_has_brands" OWNER TO "postgres";

COMMENT ON TABLE "public"."coupons_has_brands" IS 'Marcas associadas a cada cupão';

ALTER TABLE "public"."coupons" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."coupons_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."last_products_seen" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_product" bigint NOT NULL,
    "user_email" "text" NOT NULL
);

ALTER TABLE "public"."last_products_seen" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."looks" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_user" bigint NOT NULL,
    "submission_state" bigint DEFAULT '1'::bigint NOT NULL,
    "views" bigint DEFAULT '0'::bigint NOT NULL,
    "upvotes" bigint DEFAULT '0'::bigint NOT NULL,
    "url_image" "text" NOT NULL,
    "gender" numeric NOT NULL
);

ALTER TABLE "public"."looks" OWNER TO "postgres";

COMMENT ON TABLE "public"."looks" IS 'Looks submetidos pelos utilizadores';

CREATE TABLE IF NOT EXISTS "public"."looks_has_products" (
    "id_look" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_product" bigint NOT NULL
);

ALTER TABLE "public"."looks_has_products" OWNER TO "postgres";

COMMENT ON TABLE "public"."looks_has_products" IS 'Produtos associados a um look';

CREATE TABLE IF NOT EXISTS "public"."looks_has_styles" (
    "id_look" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_style" bigint NOT NULL
);

ALTER TABLE "public"."looks_has_styles" OWNER TO "postgres";

COMMENT ON TABLE "public"."looks_has_styles" IS 'Estilos associados a um look';

ALTER TABLE "public"."looks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."looks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."products_has_materials" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_product" bigint NOT NULL,
    "id_material" bigint NOT NULL
);

ALTER TABLE "public"."products_has_materials" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."purchases" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "delivery_date" timestamp with time zone,
    "total" numeric NOT NULL,
    "shipping_cost" numeric NOT NULL,
    "tracking_code" "text",
    "points_earned" bigint NOT NULL,
    "status" bigint DEFAULT '0'::bigint NOT NULL,
    "id_user" bigint NOT NULL
);

ALTER TABLE "public"."purchases" OWNER TO "postgres";

COMMENT ON TABLE "public"."purchases" IS 'Tabela que guarda todas as compras efetuadas, para ser mostrado no histórico de compras e noutros locais';

CREATE TABLE IF NOT EXISTS "public"."purchases_has_coupons" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_purchase" bigint NOT NULL,
    "id_coupon" bigint NOT NULL
);

ALTER TABLE "public"."purchases_has_coupons" OWNER TO "postgres";

COMMENT ON TABLE "public"."purchases_has_coupons" IS 'Cupões que foram aplicados numa compra específica';

CREATE TABLE IF NOT EXISTS "public"."purchases_has_offers" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_purchase" bigint NOT NULL,
    "id_offer" bigint NOT NULL
);

ALTER TABLE "public"."purchases_has_offers" OWNER TO "postgres";

COMMENT ON TABLE "public"."purchases_has_offers" IS 'Produtos (sobre a forma de oferta para guardar cor,estado,etc...) que estão presentes numa compra específica';

ALTER TABLE "public"."purchases" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."purchases_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."users" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "img" "text",
    "email" "text" DEFAULT ''::"text" NOT NULL,
    "role" numeric DEFAULT '0'::numeric NOT NULL,
    "points" bigint DEFAULT '0'::bigint NOT NULL
);

ALTER TABLE "public"."users" OWNER TO "postgres";

COMMENT ON COLUMN "public"."users"."points" IS 'Pontos que cada utilizador possui, para serem gastos em cupões';

CREATE TABLE IF NOT EXISTS "public"."users_has_coupons" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id_coupon" bigint NOT NULL,
    "id_user" bigint NOT NULL,
    "quantity" bigint DEFAULT '1'::bigint NOT NULL
);

ALTER TABLE "public"."users_has_coupons" OWNER TO "postgres";

COMMENT ON TABLE "public"."users_has_coupons" IS 'Cupões que cada utilizador tem';

COMMENT ON COLUMN "public"."users_has_coupons"."quantity" IS 'Quantidade de um cupão que cada utilizador tem';

ALTER TABLE "public"."users" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."users_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."brands"
    ADD CONSTRAINT "Brands_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."brands"
    ADD CONSTRAINT "Brands_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."categories"
    ADD CONSTRAINT "Categories_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."colors"
    ADD CONSTRAINT "Colors_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."colors"
    ADD CONSTRAINT "Colors_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."conditions"
    ADD CONSTRAINT "Conditions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."materials"
    ADD CONSTRAINT "Materials_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."products_has_images"
    ADD CONSTRAINT "Products_Images_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."products_has_styles"
    ADD CONSTRAINT "Products_has_Styles_pkey" PRIMARY KEY ("id_product", "id_style");

ALTER TABLE ONLY "public"."products"
    ADD CONSTRAINT "Products_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."sizes"
    ADD CONSTRAINT "Sizes_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."styles"
    ADD CONSTRAINT "Styles_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."styles"
    ADD CONSTRAINT "Styles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."cart"
    ADD CONSTRAINT "cart_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."cart"
    ADD CONSTRAINT "cart_pkey" PRIMARY KEY ("id_offer", "email");

ALTER TABLE ONLY "public"."collections_has_looks"
    ADD CONSTRAINT "collections_has_looks_pkey" PRIMARY KEY ("id_collection", "id_look");

ALTER TABLE ONLY "public"."collections_has_users"
    ADD CONSTRAINT "collections_has_users_pkey" PRIMARY KEY ("id_collection", "id_user");

ALTER TABLE ONLY "public"."collections"
    ADD CONSTRAINT "collections_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."collections"
    ADD CONSTRAINT "collections_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."coupons"
    ADD CONSTRAINT "coupons_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."coupons"
    ADD CONSTRAINT "coupons_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."last_products_seen"
    ADD CONSTRAINT "last_products_seen_pkey" PRIMARY KEY ("user_email", "id_product");

ALTER TABLE ONLY "public"."looks_has_products"
    ADD CONSTRAINT "looks_has_products_pkey" PRIMARY KEY ("id_look", "id_product");

ALTER TABLE ONLY "public"."looks_has_styles"
    ADD CONSTRAINT "looks_has_styles_pkey" PRIMARY KEY ("id_look", "id_style");

ALTER TABLE ONLY "public"."looks"
    ADD CONSTRAINT "looks_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."looks"
    ADD CONSTRAINT "looks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."offers"
    ADD CONSTRAINT "offers_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."offers"
    ADD CONSTRAINT "offers_pkey" PRIMARY KEY ("id_product", "id_color", "id_size");

ALTER TABLE ONLY "public"."products_has_materials"
    ADD CONSTRAINT "products_has_materials_pkey" PRIMARY KEY ("id_product", "id_material");

ALTER TABLE ONLY "public"."purchases_has_coupons"
    ADD CONSTRAINT "purchases_has_coupons_pkey" PRIMARY KEY ("id_purchase", "id_coupon");

ALTER TABLE ONLY "public"."purchases_has_offers"
    ADD CONSTRAINT "purchases_has_offers_pkey" PRIMARY KEY ("id_purchase", "id_offer");

ALTER TABLE ONLY "public"."purchases"
    ADD CONSTRAINT "purchases_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_email_key" UNIQUE ("email");

ALTER TABLE ONLY "public"."users_has_coupons"
    ADD CONSTRAINT "users_has_coupons_pkey" PRIMARY KEY ("id_coupon", "id_user");

ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("id");

CREATE OR REPLACE TRIGGER "handle_updated_at" BEFORE UPDATE ON "public"."last_products_seen" FOR EACH ROW EXECUTE FUNCTION "extensions"."moddatetime"('created_at');

ALTER TABLE ONLY "public"."cart"
    ADD CONSTRAINT "cart_email_fkey" FOREIGN KEY ("email") REFERENCES "public"."users"("email") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."cart"
    ADD CONSTRAINT "cart_id_offer_fkey" FOREIGN KEY ("id_offer") REFERENCES "public"."offers"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."collections_has_looks"
    ADD CONSTRAINT "collections_has_looks_id_collection_fkey" FOREIGN KEY ("id_collection") REFERENCES "public"."collections"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."collections_has_looks"
    ADD CONSTRAINT "collections_has_looks_id_look_fkey" FOREIGN KEY ("id_look") REFERENCES "public"."looks"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."products_has_images"
    ADD CONSTRAINT "images_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."last_products_seen"
    ADD CONSTRAINT "last_products_seen_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."last_products_seen"
    ADD CONSTRAINT "last_products_seen_user_email_fkey" FOREIGN KEY ("user_email") REFERENCES "public"."users"("email") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."looks_has_products"
    ADD CONSTRAINT "looks_has_products_id_look_fkey" FOREIGN KEY ("id_look") REFERENCES "public"."looks"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."looks_has_products"
    ADD CONSTRAINT "looks_has_products_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."looks_has_styles"
    ADD CONSTRAINT "looks_has_styles_id_look_fkey" FOREIGN KEY ("id_look") REFERENCES "public"."looks"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."looks_has_styles"
    ADD CONSTRAINT "looks_has_styles_id_style_fkey" FOREIGN KEY ("id_style") REFERENCES "public"."styles"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."looks"
    ADD CONSTRAINT "looks_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "public"."users"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."offers"
    ADD CONSTRAINT "offers_id_color_fkey" FOREIGN KEY ("id_color") REFERENCES "public"."colors"("id");

ALTER TABLE ONLY "public"."offers"
    ADD CONSTRAINT "offers_id_condition_fkey" FOREIGN KEY ("id_condition") REFERENCES "public"."conditions"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."offers"
    ADD CONSTRAINT "offers_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id");

ALTER TABLE ONLY "public"."offers"
    ADD CONSTRAINT "offers_id_size_fkey" FOREIGN KEY ("id_size") REFERENCES "public"."sizes"("id");

ALTER TABLE ONLY "public"."products_has_materials"
    ADD CONSTRAINT "products_has_materials_id_material_fkey" FOREIGN KEY ("id_material") REFERENCES "public"."materials"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."products_has_materials"
    ADD CONSTRAINT "products_has_materials_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."products_has_styles"
    ADD CONSTRAINT "products_has_styles_id_product_fkey" FOREIGN KEY ("id_product") REFERENCES "public"."products"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."products_has_styles"
    ADD CONSTRAINT "products_has_styles_id_style_fkey" FOREIGN KEY ("id_style") REFERENCES "public"."styles"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."products"
    ADD CONSTRAINT "products_id_brand_fkey" FOREIGN KEY ("id_brand") REFERENCES "public"."brands"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."products"
    ADD CONSTRAINT "products_id_category_fkey" FOREIGN KEY ("id_category") REFERENCES "public"."categories"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."collections_has_looks"
    ADD CONSTRAINT "public_collections_has_looks_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "public"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."collections_has_users"
    ADD CONSTRAINT "public_collections_has_users_id_collection_fkey" FOREIGN KEY ("id_collection") REFERENCES "public"."collections"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."collections_has_users"
    ADD CONSTRAINT "public_collections_has_users_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "public"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."coupons_has_brands"
    ADD CONSTRAINT "public_coupons_has_brands_id_brand_fkey" FOREIGN KEY ("id_brand") REFERENCES "public"."brands"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."coupons_has_brands"
    ADD CONSTRAINT "public_coupons_has_brands_id_coupon_fkey" FOREIGN KEY ("id_coupon") REFERENCES "public"."coupons"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."purchases_has_coupons"
    ADD CONSTRAINT "public_purchases_has_coupons_id_coupon_fkey" FOREIGN KEY ("id_coupon") REFERENCES "public"."coupons"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."purchases_has_coupons"
    ADD CONSTRAINT "public_purchases_has_coupons_id_purchase_fkey" FOREIGN KEY ("id_purchase") REFERENCES "public"."purchases"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."purchases_has_offers"
    ADD CONSTRAINT "public_purchases_has_offers_id_offer_fkey" FOREIGN KEY ("id_offer") REFERENCES "public"."offers"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."purchases_has_offers"
    ADD CONSTRAINT "public_purchases_has_offers_id_purchase_fkey" FOREIGN KEY ("id_purchase") REFERENCES "public"."purchases"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."purchases"
    ADD CONSTRAINT "public_purchases_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "public"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."users_has_coupons"
    ADD CONSTRAINT "public_users_has_coupons_id_coupon_fkey" FOREIGN KEY ("id_coupon") REFERENCES "public"."coupons"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."users_has_coupons"
    ADD CONSTRAINT "public_users_has_coupons_id_user_fkey" FOREIGN KEY ("id_user") REFERENCES "public"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;

CREATE POLICY "Enable delete for authenticated users only" ON "public"."collections" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Enable delete for users based on email" ON "public"."cart" FOR DELETE USING ((("auth"."jwt"() ->> 'email'::"text") = "email"));

CREATE POLICY "Enable delete for users based on user_email" ON "public"."last_products_seen" FOR DELETE USING ((("auth"."jwt"() ->> 'email'::"text") = "user_email"));

CREATE POLICY "Enable insert for authenticated users only" ON "public"."cart" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."collections" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."collections_has_looks" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."collections_has_users" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."last_products_seen" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."users" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."brands" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."cart" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."categories" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."collections" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."collections_has_looks" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."collections_has_users" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."colors" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."last_products_seen" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."materials" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."offers" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."products" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."products_has_materials" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."products_has_styles" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."styles" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."users" FOR SELECT USING (true);

CREATE POLICY "Enable update for authenticated users only" ON "public"."collections" FOR UPDATE TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable update for users based on email" ON "public"."cart" FOR UPDATE USING ((("auth"."jwt"() ->> 'email'::"text") = "email")) WITH CHECK ((("auth"."jwt"() ->> 'email'::"text") = "email"));

CREATE POLICY "Enable update for users based on user_email" ON "public"."last_products_seen" FOR UPDATE USING ((("auth"."jwt"() ->> 'email'::"text") = "user_email")) WITH CHECK ((("auth"."jwt"() ->> 'email'::"text") = "user_email"));

ALTER TABLE "public"."brands" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."cart" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."categories" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."collections" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."collections_has_looks" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."collections_has_users" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."colors" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."conditions" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."coupons" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."coupons_has_brands" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."products_has_images" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."last_products_seen" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."looks" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."looks_has_products" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."looks_has_styles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."materials" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."offers" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."products" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."products_has_materials" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."products_has_styles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."purchases" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."purchases_has_coupons" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."purchases_has_offers" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."sizes" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."styles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."users" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."users_has_coupons" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."brands" TO "anon";
GRANT ALL ON TABLE "public"."brands" TO "authenticated";
GRANT ALL ON TABLE "public"."brands" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Brands_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Brands_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Brands_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."categories" TO "anon";
GRANT ALL ON TABLE "public"."categories" TO "authenticated";
GRANT ALL ON TABLE "public"."categories" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Categories_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Categories_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Categories_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."colors" TO "anon";
GRANT ALL ON TABLE "public"."colors" TO "authenticated";
GRANT ALL ON TABLE "public"."colors" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Colors_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Colors_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Colors_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."conditions" TO "anon";
GRANT ALL ON TABLE "public"."conditions" TO "authenticated";
GRANT ALL ON TABLE "public"."conditions" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Conditions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Conditions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Conditions_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."materials" TO "anon";
GRANT ALL ON TABLE "public"."materials" TO "authenticated";
GRANT ALL ON TABLE "public"."materials" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Materials_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Materials_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Materials_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."offers" TO "anon";
GRANT ALL ON TABLE "public"."offers" TO "authenticated";
GRANT ALL ON TABLE "public"."offers" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Offers_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Offers_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Offers_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."products_has_images" TO "anon";
GRANT ALL ON TABLE "public"."products_has_images" TO "authenticated";
GRANT ALL ON TABLE "public"."products_has_images" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Products_Images_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Products_Images_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Products_Images_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."products_has_styles" TO "anon";
GRANT ALL ON TABLE "public"."products_has_styles" TO "authenticated";
GRANT ALL ON TABLE "public"."products_has_styles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Products_has_Styles_id_product_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Products_has_Styles_id_product_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Products_has_Styles_id_product_seq" TO "service_role";

GRANT ALL ON TABLE "public"."products" TO "anon";
GRANT ALL ON TABLE "public"."products" TO "authenticated";
GRANT ALL ON TABLE "public"."products" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Products_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Products_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Products_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."sizes" TO "anon";
GRANT ALL ON TABLE "public"."sizes" TO "authenticated";
GRANT ALL ON TABLE "public"."sizes" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Sizes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Sizes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Sizes_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."styles" TO "anon";
GRANT ALL ON TABLE "public"."styles" TO "authenticated";
GRANT ALL ON TABLE "public"."styles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Styles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Styles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Styles_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."cart" TO "anon";
GRANT ALL ON TABLE "public"."cart" TO "authenticated";
GRANT ALL ON TABLE "public"."cart" TO "service_role";

GRANT ALL ON SEQUENCE "public"."cart_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."cart_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."cart_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."collections" TO "anon";
GRANT ALL ON TABLE "public"."collections" TO "authenticated";
GRANT ALL ON TABLE "public"."collections" TO "service_role";

GRANT ALL ON TABLE "public"."collections_has_looks" TO "anon";
GRANT ALL ON TABLE "public"."collections_has_looks" TO "authenticated";
GRANT ALL ON TABLE "public"."collections_has_looks" TO "service_role";

GRANT ALL ON TABLE "public"."collections_has_users" TO "anon";
GRANT ALL ON TABLE "public"."collections_has_users" TO "authenticated";
GRANT ALL ON TABLE "public"."collections_has_users" TO "service_role";

GRANT ALL ON SEQUENCE "public"."collections_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."collections_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."collections_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."coupons" TO "anon";
GRANT ALL ON TABLE "public"."coupons" TO "authenticated";
GRANT ALL ON TABLE "public"."coupons" TO "service_role";

GRANT ALL ON TABLE "public"."coupons_has_brands" TO "anon";
GRANT ALL ON TABLE "public"."coupons_has_brands" TO "authenticated";
GRANT ALL ON TABLE "public"."coupons_has_brands" TO "service_role";

GRANT ALL ON SEQUENCE "public"."coupons_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."coupons_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."coupons_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."last_products_seen" TO "anon";
GRANT ALL ON TABLE "public"."last_products_seen" TO "authenticated";
GRANT ALL ON TABLE "public"."last_products_seen" TO "service_role";

GRANT ALL ON TABLE "public"."looks" TO "anon";
GRANT ALL ON TABLE "public"."looks" TO "authenticated";
GRANT ALL ON TABLE "public"."looks" TO "service_role";

GRANT ALL ON TABLE "public"."looks_has_products" TO "anon";
GRANT ALL ON TABLE "public"."looks_has_products" TO "authenticated";
GRANT ALL ON TABLE "public"."looks_has_products" TO "service_role";

GRANT ALL ON TABLE "public"."looks_has_styles" TO "anon";
GRANT ALL ON TABLE "public"."looks_has_styles" TO "authenticated";
GRANT ALL ON TABLE "public"."looks_has_styles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."looks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."looks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."looks_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."products_has_materials" TO "anon";
GRANT ALL ON TABLE "public"."products_has_materials" TO "authenticated";
GRANT ALL ON TABLE "public"."products_has_materials" TO "service_role";

GRANT ALL ON TABLE "public"."purchases" TO "anon";
GRANT ALL ON TABLE "public"."purchases" TO "authenticated";
GRANT ALL ON TABLE "public"."purchases" TO "service_role";

GRANT ALL ON TABLE "public"."purchases_has_coupons" TO "anon";
GRANT ALL ON TABLE "public"."purchases_has_coupons" TO "authenticated";
GRANT ALL ON TABLE "public"."purchases_has_coupons" TO "service_role";

GRANT ALL ON TABLE "public"."purchases_has_offers" TO "anon";
GRANT ALL ON TABLE "public"."purchases_has_offers" TO "authenticated";
GRANT ALL ON TABLE "public"."purchases_has_offers" TO "service_role";

GRANT ALL ON SEQUENCE "public"."purchases_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."purchases_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."purchases_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";

GRANT ALL ON TABLE "public"."users_has_coupons" TO "anon";
GRANT ALL ON TABLE "public"."users_has_coupons" TO "authenticated";
GRANT ALL ON TABLE "public"."users_has_coupons" TO "service_role";

GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."users_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
